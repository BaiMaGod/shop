<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mapper.product.GoodsMapper" >
  <resultMap id="BaseResultMap" type="com.model.product.Goods" >
    <id column="goodsId" property="goodsId" jdbcType="VARCHAR" />
    <result column="goodsName" property="goodsName" jdbcType="VARCHAR" />
    <result column="classify" property="classify" jdbcType="VARCHAR" />
    <result column="introduction" property="introduction" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="information" property="information" jdbcType="VARCHAR" />
    <result column="stock" property="stock" jdbcType="INTEGER" />
    <result column="updateTime" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    goodsId, goodsName, classify, introduction, price, information, stock, updateTime, 
    createTime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.model.product.GoodsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from goods
    where goodsId = #{goodsId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from goods
    where goodsId = #{goodsId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.model.product.GoodsExample" >
    delete from goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.model.product.Goods" >
    insert into goods (goodsId, goodsName, classify, 
      introduction, price, information, 
      stock, updateTime, createTime
      )
    values (#{goodsId,jdbcType=VARCHAR}, #{goodsName,jdbcType=VARCHAR}, #{classify,jdbcType=VARCHAR}, 
      #{introduction,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, #{information,jdbcType=VARCHAR}, 
      #{stock,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.model.product.Goods" >
    insert into goods
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="goodsId != null" >
        goodsId,
      </if>
      <if test="goodsName != null" >
        goodsName,
      </if>
      <if test="classify != null" >
        classify,
      </if>
      <if test="introduction != null" >
        introduction,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="information != null" >
        information,
      </if>
      <if test="stock != null" >
        stock,
      </if>
      <if test="updateTime != null" >
        updateTime,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="goodsId != null" >
        #{goodsId,jdbcType=VARCHAR},
      </if>
      <if test="goodsName != null" >
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="classify != null" >
        #{classify,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null" >
        #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="information != null" >
        #{information,jdbcType=VARCHAR},
      </if>
      <if test="stock != null" >
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.model.product.GoodsExample" resultType="java.lang.Integer" >
    select count(*) from goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update goods
    <set >
      <if test="record.goodsId != null" >
        goodsId = #{record.goodsId,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsName != null" >
        goodsName = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.classify != null" >
        classify = #{record.classify,jdbcType=VARCHAR},
      </if>
      <if test="record.introduction != null" >
        introduction = #{record.introduction,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.information != null" >
        information = #{record.information,jdbcType=VARCHAR},
      </if>
      <if test="record.stock != null" >
        stock = #{record.stock,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null" >
        updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null" >
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update goods
    set goodsId = #{record.goodsId,jdbcType=VARCHAR},
      goodsName = #{record.goodsName,jdbcType=VARCHAR},
      classify = #{record.classify,jdbcType=VARCHAR},
      introduction = #{record.introduction,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL},
      information = #{record.information,jdbcType=VARCHAR},
      stock = #{record.stock,jdbcType=INTEGER},
      updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      createTime = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.model.product.Goods" >
    update goods
    <set >
      <if test="goodsName != null" >
        goodsName = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="classify != null" >
        classify = #{classify,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null" >
        introduction = #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="information != null" >
        information = #{information,jdbcType=VARCHAR},
      </if>
      <if test="stock != null" >
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where goodsId = #{goodsId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.model.product.Goods" >
    update goods
    set goodsName = #{goodsName,jdbcType=VARCHAR},
      classify = #{classify,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      information = #{information,jdbcType=VARCHAR},
      stock = #{stock,jdbcType=INTEGER},
      updateTime = #{updateTime,jdbcType=TIMESTAMP},
      createTime = #{createTime,jdbcType=TIMESTAMP}
    where goodsId = #{goodsId,jdbcType=VARCHAR}
  </update>

  <select id="newProduct" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM goods
    ORDER BY createTime DESC
    limit 10
  </select>

</mapper>